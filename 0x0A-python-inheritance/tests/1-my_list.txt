The ``1-my_list`` module
===========================

Using ``MyList``
----------------------

Importing function from module:
    >>> my_list = __import__('1-my_list').MyList

Test positive numbers:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]
    >>> print(my_list)
    [1, 4, 2, 3, 5]

Test negative numbers:
    >>> my_list = MyList()
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(-2)
    >>> my_list.append(-3)
    >>> my_list.append(-5)
    >>> my_list.print_sorted()
    [-5, -4, -3, -2, -1]

Test float numbers:
    >>> my_list = MyList()
    >>> my_list.append(1.2)
    >>> my_list.append(-2.1)
    >>> my_list.append(0.5)
    >>> my_list.print_sorted()
    [-2.1, 0.5, 1.2]

Test an empty list:
    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

Test repeated numbers:
    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(3)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(1)
    >>> my_list.print_sorted()
    [1, 1, 2, 3, 3]

Test type of my_list:
    >>> my_list = MyList()
    >>> isinstance(my_list, list)
    True

Test type of my_list:
    >>> my_list = MyList()
    >>> isinstance(my_list, MyList)
    True

Test pass arguements to print_sorted:
    >>> my_list = MyList()
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
