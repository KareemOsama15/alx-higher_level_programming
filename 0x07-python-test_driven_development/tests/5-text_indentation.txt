This ``5-text_indentation`` module
==================================

Using ``text_indentation``
-------------------------

importing function from module:
    >>> text_indentation = __import__('5-text_indentation').text_indentation

Test large string:
    >>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
    Lorem ipsum dolor sit amet, consectetur adipiscing elit.
    <BLANKLINE>
    Quonam modo?
    <BLANKLINE>
    Utrum igitur tibi litteram videor an totas paginas commovere?
    <BLANKLINE>
    Non autem hoc:
    <BLANKLINE>
    igitur ne illud quidem.
    <BLANKLINE>
    Fortasse id optimum, sed ubi illud:
    <BLANKLINE>
    Plus semper voluptatis?
    <BLANKLINE>
    Teneo, inquit, finem illi videri nihil dolere.
    <BLANKLINE>
    Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
    <BLANKLINE>
    Si id dicis, vicimus.
    <BLANKLINE>
    Inde sermone vario sex illa a Dipylo stadia confecimus.
    <BLANKLINE>
    Sin aliud quid voles, postea.
    <BLANKLINE>
    Quae animi affectio suum cuique tribuens atque hanc, quam dico.
    <BLANKLINE>
    Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

Test spaces:
    >>> text_indentation("    ")

Test word around spaces:
    >>> text_indentation("  Python  ")
    Python

Test word ending by dot:
    >>> text_indentation("python     .")
    python.
    <BLANKLINE>

Test text not string:
    >>> text_indentation(5000)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

Test 3 special chars '.:?':
    >>> text_indentation(":?.")
    :
    <BLANKLINE>
    ?
    <BLANKLINE>
    .
    <BLANKLINE>

Test passing None:
    >>> text_indentation(None)
    Traceback (most recent call last):
    ...
    TypeError: text must be a string

Test passing string with special chars:
    >>> text_indentation("Hello Mr: Kareem. How are you today? ,Hope you well  ")
    Hello Mr:
    <BLANKLINE>
    Kareem.
    <BLANKLINE>
    How are you today?
    <BLANKLINE>
    ,Hope you well

Test passing new lines:
    >>> text_indentation("\n.\n  \n  ?:   \n.")
    <BLANKLINE>
    .
    <BLANKLINE>
    <BLANKLINE>
    <BLANKLINE>
    ?
    <BLANKLINE>
    :
    <BLANKLINE>
    <BLANKLINE>
    .
    <BLANKLINE>
